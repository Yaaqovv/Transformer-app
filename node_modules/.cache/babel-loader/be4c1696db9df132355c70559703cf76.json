{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\add.js\";\nimport React, { Component } from 'react';\n\nvar Add =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Add, _Component);\n\n  function Add(props) {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Add).call(this, props));\n    _this.models = {};\n    _this.types = {\n      Air: ['Helicopter', 'Plane'],\n      Sea: ['Boat', 'Submarine'],\n      Land: ['Car', 'Truck']\n    };\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.state = {\n      name: '',\n      vehicleGroup: '',\n      currentVehicleGroup: [],\n      vehicleType: '',\n      currentModelGroup: [],\n      vehicleModel: '',\n      gearItem: '',\n      gear: [],\n      status: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addGear = _this.addGear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitForm = _this.submitForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/vehicleTypes\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        json.map(function (object, group, model, type) {\n          if (!_this2.models.hasOwnProperty(object.type)) {\n            _this2.models[object.type] = [object.model];\n          } else if (_this2.models.hasOwnProperty(object.type) && !_this2.models[object.type].includes(object.model)) {\n            _this2.models[object.type].push(object.model);\n          }\n        });\n      });\n      console.log(this.models);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n      console.log(value);\n\n      if (name === 'vehicleGroup') {\n        this.setState({\n          currentVehicleGroup: this.types[value]\n        });\n        console.log(this.types[value]);\n      }\n\n      if (name === 'vehicleType') {\n        console.log(value);\n        this.setState({\n          currentModelGroup: this.models[value]\n        });\n      }\n\n      console.log(this.state);\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(event) {\n      event.preventDefault();\n      this.props.toggleAddForm;\n      fetch('http://localhost:3000/transformers', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          vehicleGroup: this.state.vehicleGroup,\n          vehicleType: this.state.vehicleType,\n          vehicleModel: this.state.vehicleModel,\n          gear: this.state.gear,\n          status: this.state.status\n        })\n      }).then(this.props.getTransformers).then(this.setState({\n        name: '',\n        gearItem: ''\n      }));\n    }\n  }, {\n    key: \"addGear\",\n    value: function addGear(event) {\n      event.preventDefault();\n      this.setState({\n        gear: _toConsumableArray(this.state.gear).concat([this.state.gearItem])\n      });\n      console.log(this.state.gear);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var vGroup = ['Air', 'Sea', 'Land'];\n\n      if (this.props.show) {\n        return React.createElement(\"div\", {\n          className: \"add-transformer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: this.state.name,\n          name: \"name\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(\"select\", {\n          name: \"vehicleGroup\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Please select group\"), vGroup.map(function (group, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, group);\n        })), React.createElement(\"select\", {\n          name: \"vehicleType\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Please select type\"), this.state.currentVehicleGroup.map(function (type, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, type);\n        })), React.createElement(\"select\", {\n          name: \"vehicleModel\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Please select model\"), this.state.currentModelGroup.map(function (model, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, model);\n        })), React.createElement(\"input\", {\n          type: \"text\",\n          id: \"gear\",\n          value: this.state.gearItem,\n          name: \"gearItem\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          id: \"submit-gear\",\n          onClick: this.addGear,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Add gear\"), React.createElement(\"select\", {\n          name: \"status\",\n          id: \"status\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Please select status\"), this.statuses.map(function (status, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, status);\n        })), React.createElement(\"input\", {\n          type: \"submit\",\n          id: \"submit\",\n          onClick: this.submitForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport { Add as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\add.js"],"names":["React","Component","Add","props","models","types","Air","Sea","Land","statuses","state","name","vehicleGroup","currentVehicleGroup","vehicleType","currentModelGroup","vehicleModel","gearItem","gear","status","handleInputChange","bind","addGear","submitForm","fetch","then","response","json","map","object","group","model","type","hasOwnProperty","includes","push","console","log","event","target","value","selected","setState","preventDefault","toggleAddForm","method","headers","body","JSON","stringify","getTransformers","vGroup","show","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Add extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.models = {}\r\n    this.types = {\r\n      Air:  ['Helicopter', 'Plane'],\r\n      Sea:  ['Boat', 'Submarine'],\r\n      Land: ['Car', 'Truck']\r\n    }\r\n    this.statuses = ['OK', 'INJURED', 'MIA'];\r\n    this.state = {\r\n      name: '',\r\n      vehicleGroup: '',\r\n      currentVehicleGroup: [],\r\n      vehicleType: '',\r\n      currentModelGroup: [],\r\n      vehicleModel: '',\r\n      gearItem: '',\r\n      gear: [],\r\n      status: ''\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.addGear = this.addGear.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch(\"http://localhost:3000/vehicleTypes\")\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      json.map((object, group, model, type) => {\r\n        if(!(this.models.hasOwnProperty(object.type))){\r\n          this.models[object.type] = [object.model]\r\n        } else if(this.models.hasOwnProperty(object.type) && !this.models[object.type].includes(object.model)) {\r\n          this.models[object.type].push(object.model);\r\n        }\r\n     });\r\n    });\r\n    console.log(this.models);\r\n  }\r\n\r\n  handleInputChange (event) {\r\n      const target = event.target;\r\n      const value = target.type === 'select' ? target.selected : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n\r\n      console.log(value);\r\n\r\n      if (name === 'vehicleGroup') {\r\n\r\n        this.setState({\r\n          currentVehicleGroup: this.types[value]\r\n        });\r\n\r\n        console.log(this.types[value]);\r\n      }\r\n\r\n      if (name === 'vehicleType') {\r\n        console.log(value);\r\n\r\n        this.setState({\r\n          currentModelGroup: this.models[value]\r\n        })\r\n\r\n      }\r\n\r\n      console.log(this.state);\r\n  }\r\n  submitForm (event) {\r\n    event.preventDefault();\r\n    this.props.toggleAddForm;\r\n    fetch('http://localhost:3000/transformers', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        vehicleGroup: this.state.vehicleGroup,\r\n        vehicleType: this.state.vehicleType,\r\n        vehicleModel: this.state.vehicleModel,\r\n        gear: this.state.gear,\r\n        status: this.state.status\r\n      })\r\n    })\r\n    .then(this.props.getTransformers)\r\n    .then(this.setState({ name: '', gearItem: ''}));\r\n    \r\n  }\r\n  addGear (event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      gear: [...this.state.gear, this.state.gearItem]\r\n    });\r\n    console.log(this.state.gear);\r\n\r\n  }\r\n\r\n  render() {\r\n    const vGroup = ['Air', 'Sea', 'Land'];\r\n    if (this.props.show) {\r\n    return (\r\n      <div className=\"add-transformer\">\r\n        <form>\r\n            <input type=\"text\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.handleInputChange} />\r\n            <select name=\"vehicleGroup\" onChange={this.handleInputChange}>\r\n                <option selected disabled>Please select group</option>\r\n                \r\n                {vGroup.map((group, index) => (\r\n                    <option key={index} value={group}>{group}</option>\r\n                ))}\r\n            </select> \r\n            <select name=\"vehicleType\" onChange={this.handleInputChange}>\r\n                <option selected disabled>Please select type</option>\r\n                {this.state.currentVehicleGroup.map((type, index) => (\r\n                    <option key={index} value={type}>{type}</option>\r\n                ))}\r\n            </select>\r\n            <select name=\"vehicleModel\" onChange={this.handleInputChange}>\r\n                <option selected disabled>Please select model</option>\r\n                {this.state.currentModelGroup.map((model, index) => (\r\n                    <option key={index} value={model}>{model}</option>\r\n                ))}\r\n            </select>\r\n              <input type=\"text\" id=\"gear\" value={this.state.gearItem} name=\"gearItem\" onChange={this.handleInputChange} />  \r\n              <button id=\"submit-gear\" onClick={this.addGear}>Add gear</button>\r\n            <select name=\"status\" id=\"status\" onChange={this.handleInputChange}>\r\n              <option selected disabled>Please select status</option>\r\n              {this.statuses.map((status, index) => (\r\n                  <option key={index} value={status}>{status}</option>\r\n              ))}\r\n            </select>\r\n            <input type=\"submit\" id=\"submit\" onClick={this.submitForm} />\r\n        </form>\r\n      </div>\r\n    );\r\n    } else { return null; }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}