{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\detailsPage.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\nimport Add from './add';\nimport UpdateDetails from './updateDetails';\nimport NotFound from './notFound';\n\nvar DetailsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailsPage, _Component);\n\n  function DetailsPage(props) {\n    var _this;\n\n    _classCallCheck(this, DetailsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailsPage).call(this, props));\n    _this.state = {\n      items: []\n    };\n    _this.getTransformers = _this.getTransformers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DetailsPage, [{\n    key: \"getTransformers\",\n    value: function getTransformers() {\n      var _this2 = this;\n\n      var myHeaders = new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      });\n      fetch('http://localhost:3000/transformers', {\n        headers: myHeaders\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          items: json\n        });\n\n        console.log(_this2.props.match);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getTransformers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var transformers = this.state.items;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"DetailsPage\", this.state.items.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\".concat(_this3.props.match.url, \"/\").concat(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, item.name));\n      }), React.createElement(Route, {\n        path: \"\".concat(this.props.match.url, \"/:itemId\"),\n        render: function render(_ref) {\n          var match = _ref.match;\n          var transformer = transformers.find(function (transformer) {\n            return transformer.id == match.params.itemId;\n          });\n\n          if (!transformer) {\n            return React.createElement(NotFound, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            });\n          }\n\n          return React.createElement(UpdateDetails, Object.assign({}, transformer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DetailsPage;\n}(Component);\n\nexport { DetailsPage as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\detailsPage.js"],"names":["React","Component","BrowserRouter","Route","Link","Redirect","Add","UpdateDetails","NotFound","DetailsPage","props","state","items","getTransformers","bind","myHeaders","Headers","fetch","headers","then","response","json","setState","console","log","match","transformers","map","item","id","url","name","transformer","find","params","itemId"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,QAArC,QAAqD,kBAArD;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAGqBC,W;;;;;AAEjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAIA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AAPe;AAQlB;;;;sCAEiB;AAAA;;AACd,UAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC1B,wBAAgB,kBADU;AAE1B,kBAAU;AAFgB,OAAZ,CAAlB;AAIAC,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,QAAAA,OAAO,EAAEH;AAD+B,OAAvC,CAAL,CAGCI,IAHD,CAGM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAHd,EAICF,IAJD,CAIM,UAAAE,IAAI,EAAI;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACVV,UAAAA,KAAK,EAAES;AADG,SAAd;;AAGAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACd,KAAL,CAAWe,KAAvB;AACC,OATL;AAUH;;;yCAEoB;AACjB,WAAKZ,eAAL;AACH;;;6BAEQ;AAAA;;AACL,UAAMa,YAAY,GAAG,KAAKf,KAAL,CAAWC,KAAhC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGM,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AACzB,eAAQ;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ,oBAAC,IAAD;AAAM,UAAA,EAAE,YAAK,MAAI,CAACnB,KAAL,CAAWe,KAAX,CAAiBK,GAAtB,cAA6BF,IAAI,CAACC,EAAlC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiDD,IAAI,CAACG,IAAtD,CADI,CAAR;AAGH,OAJD,CAHN,EASE,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAK,KAAKrB,KAAL,CAAWe,KAAX,CAAiBK,GAAtB,aAAX;AAAgD,QAAA,MAAM,EAClD,sBAAa;AAAA,cAAXL,KAAW,QAAXA,KAAW;AACT,cAAMO,WAAW,GAAGN,YAAY,CAACO,IAAb,CAAkB,UAAAD,WAAW;AAAA,mBAAIA,WAAW,CAACH,EAAZ,IAAkBJ,KAAK,CAACS,MAAN,CAAaC,MAAnC;AAAA,WAA7B,CAApB;;AACA,cAAI,CAACH,WAAL,EAAkB;AACd,mBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,iBAAO,oBAAC,aAAD,oBAAmBA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH,SARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAsBH;;;;EAzDoC/B,S;;SAApBQ,W","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Link, Redirect } from 'react-router-dom';\r\n\r\nimport Add from './add';\r\nimport UpdateDetails from './updateDetails';\r\nimport NotFound from './notFound';\r\n\r\n\r\nexport default class DetailsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: []\r\n        }\r\n\r\n        this.getTransformers = this.getTransformers.bind(this);\r\n    }\r\n\r\n    getTransformers() {\r\n        const myHeaders = new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        });\r\n        fetch('http://localhost:3000/transformers', {\r\n            headers: myHeaders,\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            this.setState({\r\n                items: json\r\n            })\r\n            console.log(this.props.match);\r\n            });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getTransformers();\r\n    }\r\n\r\n    render() {\r\n        const transformers = this.state.items;\r\n        return (\r\n          <div>\r\n            DetailsPage\r\n            {\r\n                this.state.items.map(item => {\r\n                    return (<div key={item.id}>\r\n                        <Link to={`${this.props.match.url}/${item.id}`}>{item.name}</Link>\r\n                    </div>);\r\n                })   \r\n            }\r\n            <Route path={`${this.props.match.url}/:itemId`} render={\r\n                ({match}) => { \r\n                    const transformer = transformers.find(transformer => transformer.id == match.params.itemId);\r\n                    if (!transformer) {\r\n                        return <NotFound />\r\n                    }\r\n\r\n                    return <UpdateDetails {...transformer} />\r\n                }\r\n            } />\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}