{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\updateDetails.js\";\nimport React, { Component } from 'react';\n\nvar UpdateDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateDetails, _Component);\n\n  function UpdateDetails(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateDetails).call(this, props));\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.models = {};\n    _this.state = {\n      id: '',\n      name: '',\n      vehicleGroup: _this.props.vehicleGroup,\n      currentVehicleGroup: [],\n      vehicleType: '',\n      vehicleModel: '',\n      gear: [],\n      status: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateDetails, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      fetch('http://localhost:3000/transformers/' + this.state.id, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          name: this.name.value,\n          vehicleGroup: this.state.vehicleGroup,\n          vehicleType: this.vType.value,\n          vehicleModel: this.props.vehicleModel,\n          gear: this.gear.value.split(\", \"),\n          status: this.state.status\n        })\n      });\n      console.log(\"name was submitted: \" + this.name.value + ' ' + this.state.gear.join(', ') + ' ' + this.gear.value);\n      console.log(this.gear.value.split(\", \"));\n      console.log(this.vGroup.value);\n      console.log(this.state.name);\n      this.props.getTransformer();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n      console.log(this.state.vehicleGroup);\n      console.log(this.state.name);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.name !== this.props.name) {\n        this.setState({\n          name: this.props.name,\n          id: this.props.id,\n          status: this.props.status,\n          vehicleGroup: this.props.vehicleGroup,\n          vehicleType: this.props.vehicleType,\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\n          vehicleModel: this.props.vehicleModel,\n          gear: this.props.gear\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vGroup = ['Air', 'Sea', 'Land'];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"UpdateDetails\", React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        key: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: this.state.id,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        defaultValue: this.state.name || '',\n        ref: function ref(input) {\n          return _this2.name = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Vehicle group: \"), React.createElement(\"select\", {\n        name: \"vehicleGroup\",\n        ref: function ref(input) {\n          return _this2.vGroup = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, vGroup.map(function (group, index) {\n        if (group === _this2.state.vehicleGroup) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, group);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, group);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Vehicle type: \"), React.createElement(\"select\", {\n        name: \"vehicleType\",\n        ref: function ref(input) {\n          return _this2.vType = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.props.types[this.state.vehicleGroup].map(function (type, index) {\n        if (type === _this2.state.vehicleType) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, type);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, type);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleModel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Vehicle model: \"), React.createElement(\"select\", {\n        name: \"vehicleModel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.props.models[this.props.vehicleType].map(function (model, index) {\n        if (model === _this2.state.vehicleModel) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, model);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, model);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"gear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Gear: \", this.state.gear.join(', ')), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"gear\",\n        defaultValue: this.state.gear.join(', ') || '',\n        ref: function ref(input) {\n          return _this2.gear = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Status: \"), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.statuses.map(function (status, index) {\n        if (status === _this2.state.status) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, status);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, status);\n        }\n      }))), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        name: nextProps.name,\n        id: nextProps.id,\n        status: nextProps.status,\n        vehicleType: nextProps.vehicleType,\n        currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\n        vehicleModel: nextProps.vehicleModel,\n        gear: nextProps.gear\n      };\n    }\n  }]);\n\n  return UpdateDetails;\n}(Component);\n\nexport { UpdateDetails as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\updateDetails.js"],"names":["React","Component","UpdateDetails","props","statuses","models","state","id","name","vehicleGroup","currentVehicleGroup","vehicleType","vehicleModel","gear","status","handleInputChange","bind","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","value","vType","split","console","log","join","vGroup","getTransformer","target","type","selected","setState","prevProps","prevState","types","input","map","group","index","model","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class UpdateDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.statuses = ['OK', 'INJURED', 'MIA'];\r\n\r\n        this.models = {};\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            vehicleGroup: this.props.vehicleGroup,\r\n            currentVehicleGroup: [],\r\n            vehicleType: '',\r\n            vehicleModel: '',\r\n            gear: [],\r\n            status: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      fetch('http://localhost:3000/transformers/'+this.state.id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: this.state.id,\r\n          name: this.name.value,\r\n          vehicleGroup: this.state.vehicleGroup,\r\n          vehicleType: this.vType.value,\r\n          vehicleModel: this.props.vehicleModel,\r\n          gear: this.gear.value.split(\", \"),\r\n          status: this.state.status\r\n        })\r\n      })\r\n      console.log(\"name was submitted: \" + this.name.value + ' ' + this.state.gear.join(', ') + ' ' + this.gear.value);\r\n      console.log(this.gear.value.split(\", \"));\r\n      console.log(this.vGroup.value);\r\n      console.log(this.state.name);\r\n      this.props.getTransformer();\r\n    }\r\n\r\n    handleInputChange (event) {\r\n      const target = event.target;\r\n      const value = target.type === 'select' ? target.selected : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n\r\n      console.log(this.state.vehicleGroup);\r\n\r\n      console.log(this.state.name);\r\n\r\n  }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return { name: nextProps.name,\r\n                 id: nextProps.id,\r\n                 status: nextProps.status,\r\n                 vehicleType: nextProps.vehicleType,\r\n                 currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\r\n                 vehicleModel: nextProps.vehicleModel,\r\n                 gear: nextProps.gear\r\n                };\r\n   \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.name !== this.props.name) {\r\n        this.setState({\r\n          name: this.props.name,\r\n          id: this.props.id,\r\n          status: this.props.status,\r\n          vehicleGroup: this.props.vehicleGroup,\r\n          vehicleType: this.props.vehicleType,\r\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\r\n          vehicleModel: this.props.vehicleModel,\r\n          gear: this.props.gear\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const vGroup = ['Air', 'Sea', 'Land'];\r\n        \r\n        return (\r\n          <div>\r\n            UpdateDetails\r\n            <form onSubmit={this.handleSubmit} key={this.props.id}>\r\n            <div><label htmlFor=\"id\">ID: </label><input type=\"text\" name=\"id\" value={this.state.id} readOnly/></div>\r\n            <div><label htmlFor=\"name\">Name: </label><input type=\"text\" name=\"name\" defaultValue={this.state.name || ''} ref={input => this.name = input} onChange={this.handleInputChange}/></div>\r\n  \r\n            <div>\r\n              <label htmlFor=\"vehicleGroup\">Vehicle group: </label>\r\n              <select name=\"vehicleGroup\" ref={input => this.vGroup = input} onChange={this.handleInputChange}>\r\n                {vGroup.map((group, index) => {\r\n                  if (group === this.state.vehicleGroup) {\r\n                    return <option key={index} value={group} selected>{group}</option>\r\n                  } else {\r\n                    return <option key={index} value={group}>{group}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vehicleType\">Vehicle type: </label>\r\n              <select name=\"vehicleType\" ref={input => this.vType = input}>\r\n                {this.props.types[this.state.vehicleGroup].map((type, index) => {\r\n                  if (type === this.state.vehicleType) {\r\n                    return <option key={index} value={type} selected>{type}</option>\r\n                  } else { \r\n                    return <option key={index} value={type}>{type}</option>\r\n                  }\r\n                  \r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vehicleModel\">Vehicle model: </label>\r\n              <select name=\"vehicleModel\">\r\n                {this.props.models[this.props.vehicleType].map((model, index) => {\r\n                  if (model === this.state.vehicleModel) {\r\n                    return <option key={index} value={model} selected>{model}</option>\r\n                  } else {\r\n                    return <option key={index} value={model}>{model}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"gear\">Gear: {this.state.gear.join(', ')}</label>\r\n              <input type=\"text\" name=\"gear\" defaultValue={this.state.gear.join(', ') || ''} ref={input => this.gear = input}/>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"status\">Status: </label>\r\n              <select name=\"status\" id=\"status\">\r\n              {this.statuses.map((status, index) => {\r\n                if (status === this.state.status) {\r\n                  return <option key={index} value={status} selected>{status}</option>\r\n                } else {\r\n                  return <option key={index} value={status}>{status}</option>\r\n                }\r\n              })}\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"submit\">Update</button>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}