{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\jakov.horvat\\\\Transformer-app\\\\src\\\\components\\\\updateDetails.js\";\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nvar UpdateDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateDetails, _Component);\n\n  function UpdateDetails(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateDetails).call(this, props));\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.models = {};\n    _this.state = {\n      id: '',\n      name: '',\n      vehicleGroup: _this.props.vehicleGroup,\n      currentVehicleGroup: [],\n      vehicleType: _this.props.vehicleType,\n      vehicleModel: _this.props.vehicleModel,\n      gear: [],\n      status: '',\n      showModal: false,\n      modalText: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateDetails, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      console.log({\n        \"name\": this.name.value,\n        \"vehicleGroup\": this.vGroup.value,\n        \"vehicleType\": this.vType.value,\n        \"vehicleModel\": this.model.value,\n        \"gear\": this.gear.value,\n        \"status\": this.status.value\n      });\n      fetch('http://localhost:3000/transformers/' + this.state.id, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          name: this.name.value,\n          vehicleGroup: this.vGroup.value,\n          vehicleType: this.vType.value,\n          vehicleModel: this.model.value,\n          gear: this.gear.value.split(\", \"),\n          status: this.status.value\n        })\n      });\n      this.props.getTransformer();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.name !== this.props.name) {\n        this.setState({\n          name: this.props.name,\n          id: this.props.id,\n          status: this.props.status,\n          vehicleGroup: this.props.vehicleGroup,\n          vehicleType: this.props.vehicleType,\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\n          vehicleModel: this.props.vehicleModel,\n          gear: this.props.gear\n        });\n      } else if (prevState.vehicleGroup !== this.vGroup.value) {\n        this.setState({\n          vehicleType: this.vType.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vGroup = ['Air', 'Sea', 'Land'];\n      return React.createElement(\"div\", {\n        className: \"update-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"hline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        key: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"id\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        className: \"right-tab\",\n        value: this.state.id,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"right-tab\",\n        defaultValue: this.state.name || '',\n        ref: function ref(input) {\n          return _this2.name = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleGroup\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Vehicle group: \"), React.createElement(\"select\", {\n        name: \"vehicleGroup\",\n        className: \"right-tab\",\n        ref: function ref(input) {\n          return _this2.vGroup = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, vGroup.map(function (group, index) {\n        if (group === _this2.state.vehicleGroup) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, group);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, group);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleType\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Vehicle type: \"), React.createElement(\"select\", {\n        name: \"vehicleType\",\n        className: \"right-tab\",\n        ref: function ref(input) {\n          return _this2.vType = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.props.types[this.state.vehicleGroup].map(function (type, index) {\n        if (type === _this2.state.vehicleType) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, type);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, type);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleModel\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Vehicle model: \"), React.createElement(\"select\", {\n        name: \"vehicleModel\",\n        className: \"right-tab\",\n        ref: function ref(input) {\n          return _this2.model = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.props.models[this.state.vehicleType].map(function (model, index) {\n        if (model === _this2.state.vehicleModel) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, model);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, model);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"gear\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Gear: \", this.state.gear.join(', ')), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"gear\",\n        className: \"right-tab\",\n        defaultValue: this.state.gear.join(', ') || '',\n        ref: function ref(input) {\n          return _this2.gear = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"status\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Status: \"), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        className: \"right-tab form-control\",\n        ref: function ref(input) {\n          return _this2.status = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.statuses.map(function (status, index) {\n        if (status === _this2.state.status) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, status);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, status);\n        }\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-outline-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        name: nextProps.name,\n        id: nextProps.id,\n        status: nextProps.status,\n        currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\n        gear: nextProps.gear\n      };\n    }\n  }]);\n\n  return UpdateDetails;\n}(Component);\n\nexport { UpdateDetails as default };","map":{"version":3,"sources":["C:\\Users\\jakov.horvat\\Transformer-app\\src\\components\\updateDetails.js"],"names":["React","Component","ReactModal","UpdateDetails","props","statuses","models","state","id","name","vehicleGroup","currentVehicleGroup","vehicleType","vehicleModel","gear","status","showModal","modalText","handleInputChange","bind","handleSubmit","event","preventDefault","console","log","value","vGroup","vType","model","fetch","method","headers","body","JSON","stringify","split","getTransformer","target","type","selected","setState","prevProps","prevState","types","input","map","group","index","join","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\n\r\nexport default class UpdateDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.statuses = ['OK', 'INJURED', 'MIA'];\r\n\r\n        this.models = {};\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            vehicleGroup: this.props.vehicleGroup,\r\n            currentVehicleGroup: [],\r\n            vehicleType: this.props.vehicleType,\r\n            vehicleModel: this.props.vehicleModel,\r\n            gear: [],\r\n            status: '',\r\n            showModal: false,\r\n            modalText: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      console.log({\r\n        \"name\": this.name.value,\r\n        \"vehicleGroup\": this.vGroup.value,\r\n        \"vehicleType\": this.vType.value,\r\n        \"vehicleModel\": this.model.value,\r\n        \"gear\": this.gear.value,\r\n        \"status\": this.status.value\r\n      });\r\n      fetch('http://localhost:3000/transformers/'+this.state.id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: this.state.id,\r\n          name: this.name.value,\r\n          vehicleGroup: this.vGroup.value,\r\n          vehicleType: this.vType.value,\r\n          vehicleModel: this.model.value,\r\n          gear: this.gear.value.split(\", \"),\r\n          status: this.status.value\r\n        })\r\n      })\r\n      this.props.getTransformer();\r\n    }\r\n\r\n    handleInputChange (event) {\r\n      const target = event.target;\r\n      const value = target.type === 'select' ? target.selected : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n\r\n  }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return { name: nextProps.name,\r\n                 id: nextProps.id,\r\n                 status: nextProps.status,\r\n                 currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\r\n                 gear: nextProps.gear\r\n                };\r\n   \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.name !== this.props.name) {\r\n        this.setState({\r\n          name: this.props.name,\r\n          id: this.props.id,\r\n          status: this.props.status,\r\n          vehicleGroup: this.props.vehicleGroup,\r\n          vehicleType: this.props.vehicleType,\r\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\r\n          vehicleModel: this.props.vehicleModel,\r\n          gear: this.props.gear\r\n        })\r\n       } else if (prevState.vehicleGroup !== this.vGroup.value) {\r\n        this.setState({\r\n          vehicleType: this.vType.value\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const vGroup = ['Air', 'Sea', 'Land'];\r\n        \r\n        return (\r\n          <div className=\"update-details\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"hline\"></div>\r\n            <form onSubmit={this.handleSubmit} key={this.props.id}>\r\n            <div><label htmlFor=\"id\" className=\"left-tab\">ID: </label><input type=\"text\" name=\"id\" className=\"right-tab\" value={this.state.id} readOnly/></div>\r\n            <div><label htmlFor=\"name\" className=\"left-tab\">Name: </label><input type=\"text\" name=\"name\" className=\"right-tab\" defaultValue={this.state.name || ''} ref={input => this.name = input} onChange={this.handleInputChange}/></div>\r\n  \r\n            <div>\r\n              <label htmlFor=\"vehicleGroup\" className=\"left-tab\">Vehicle group: </label>\r\n              <select name=\"vehicleGroup\" className=\"right-tab\" ref={input => this.vGroup = input} onChange={this.handleInputChange}>\r\n                {vGroup.map((group, index) => {\r\n                  if (group === this.state.vehicleGroup) {\r\n                    return <option key={index} value={group} selected>{group}</option>\r\n                  } else {\r\n                    return <option key={index} value={group}>{group}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vehicleType\" className=\"left-tab\">Vehicle type: </label>\r\n              <select name=\"vehicleType\" className=\"right-tab\" ref={input => this.vType = input} onChange={this.handleInputChange}>\r\n                {this.props.types[this.state.vehicleGroup].map((type, index) => {\r\n                  if (type === this.state.vehicleType) {\r\n                    return <option key={index} value={type} selected>{type}</option>\r\n                  } else { \r\n                    return <option key={index} value={type}>{type}</option>\r\n                  }\r\n                  \r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vehicleModel\" className=\"left-tab\">Vehicle model: </label>\r\n              <select name=\"vehicleModel\" className=\"right-tab\" ref={input => this.model = input}>\r\n                {this.props.models[this.state.vehicleType].map((model, index) => {\r\n                  if (model === this.state.vehicleModel) {\r\n                    return <option key={index} value={model} selected>{model}</option>\r\n                  } else {\r\n                    return <option key={index} value={model}>{model}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"gear\" className=\"left-tab\">Gear: {this.state.gear.join(', ')}</label>\r\n              <input type=\"text\" name=\"gear\" className=\"right-tab\" defaultValue={this.state.gear.join(', ') || ''} ref={input => this.gear = input}/>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"status\" className=\"left-tab\">Status: </label>\r\n              <select name=\"status\" id=\"status\" className=\"right-tab form-control\" ref={input => this.status = input}>\r\n              {this.statuses.map((status, index) => {\r\n                if (status === this.state.status) {\r\n                  return <option key={index} value={status} selected>{status}</option>\r\n                } else {\r\n                  return <option key={index} value={status}>{status}</option>\r\n                }\r\n              })}\r\n              </select>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Update</button>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}