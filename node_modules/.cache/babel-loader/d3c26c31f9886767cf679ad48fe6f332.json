{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\updateDetails.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nvar UpdateDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateDetails, _Component);\n\n  function UpdateDetails(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateDetails).call(this, props));\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.types = {\n      Air: ['Helicopter', 'Plane'],\n      Sea: ['Boat', 'Submarine'],\n      Land: ['Car', 'Truck']\n    };\n    _this.state = {\n      id: props.id,\n      name: props.name,\n      vehicleGroup: '',\n      currentVehicleGroup: [],\n      vehicleType: '',\n      vehicleModel: '',\n      gear: '',\n      status: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.input = React.createRef();\n    return _this;\n  }\n\n  _createClass(UpdateDetails, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert(\"name was submitted: \" + this.input.current.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n      console.log(value);\n\n      if (name === 'vehicleGroup') {\n        this.setState({\n          currentVehicleGroup: this.types[value]\n        });\n        console.log(this.types[value]);\n      }\n\n      if (name === 'vehicleType') {\n        console.log(value);\n        this.setState({\n          currentModelGroup: this.models[value]\n        });\n      }\n\n      console.log(this.state);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.name !== this.props.name) {\n        this.setState({\n          name: this.props.name,\n          id: this.props.id,\n          status: this.props.status,\n          vehicleGroup: this.props.vehicleGroup,\n          vehicleType: this.props.vehicleType,\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup]\n        });\n      }\n\n      console.log(this.state.vehicleType);\n      console.log(this.state.currentVehicleGroup);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console;\n      this.setState({\n        vehicleGroup: this.props.vehicleGroup,\n        vehicleType: this.props.vehicleType\n      });\n      console.log(this.state.vehicleGroup);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vGroup = ['Air', 'Sea', 'Land'];\n      var types = {\n        Air: ['Helicopter', 'Plane'],\n        Sea: ['Boat', 'Submarine'],\n        Land: ['Car', 'Truck']\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"UpdateDetails\", React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        key: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: this.state.id,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        defaultValue: this.props.name || '',\n        ref: this.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Status: \"), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.statuses.map(function (status, index) {\n        if (status === _this2.state.status) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, status);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, status);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Vehicle group: \"), React.createElement(\"select\", {\n        name: \"vehicleGroup\",\n        onChange: this.handleInputChange,\n        defaultValue: this.props.vehicleGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, vGroup.map(function (group, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: group,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, group);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Vehicle type: \"), React.createElement(\"select\", {\n        name: \"vehicleType\",\n        defaultValue: this.state.vehicleType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.types[this.props.vehicleGroup].map(function (type, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, type);\n      })))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.name !== prevState.name) {\n        return {\n          name: nextProps.name,\n          id: nextProps.id,\n          status: nextProps.status,\n          vehicleGroup: nextProps.vehicleGroup,\n          vehicleType: nextProps.vehicleType,\n          currentVehicleGroup: nextProps.types[nextProps.vehicleGroup]\n        };\n      } else return null;\n    }\n  }]);\n\n  return UpdateDetails;\n}(Component);\n\nexport { UpdateDetails as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\updateDetails.js"],"names":["React","Component","BrowserRouter","Route","Link","UpdateDetails","props","statuses","types","Air","Sea","Land","state","id","name","vehicleGroup","currentVehicleGroup","vehicleType","vehicleModel","gear","status","handleInputChange","bind","handleSubmit","input","createRef","event","alert","current","value","preventDefault","target","type","selected","setState","console","log","currentModelGroup","models","prevProps","prevState","vGroup","map","index","group","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\n\r\n\r\nexport default class UpdateDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.statuses = ['OK', 'INJURED', 'MIA'];\r\n\r\n        this.types = {\r\n          Air:  ['Helicopter', 'Plane'],\r\n          Sea:  ['Boat', 'Submarine'],\r\n          Land: ['Car', 'Truck']\r\n        }\r\n\r\n        this.state = {\r\n            id: props.id,\r\n            name: props.name,\r\n            vehicleGroup: '',\r\n            currentVehicleGroup: [],\r\n            vehicleType: '',\r\n            vehicleModel: '',\r\n            gear: '',\r\n            status: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.input = React.createRef();\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n      alert(\"name was submitted: \" + this.input.current.value);\r\n      event.preventDefault();\r\n    }\r\n\r\n    handleInputChange (event) {\r\n      const target = event.target;\r\n      const value = target.type === 'select' ? target.selected : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n\r\n      console.log(value);\r\n\r\n      if (name === 'vehicleGroup') {\r\n\r\n        this.setState({\r\n          currentVehicleGroup: this.types[value]\r\n        });\r\n\r\n        console.log(this.types[value]);\r\n      }\r\n\r\n      if (name === 'vehicleType') {\r\n        console.log(value);\r\n\r\n        this.setState({\r\n          currentModelGroup: this.models[value]\r\n        })\r\n\r\n      }\r\n\r\n      console.log(this.state);\r\n  }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n      \r\n      if(nextProps.name !== prevState.name) {\r\n        return { name: nextProps.name,\r\n                 id: nextProps.id,\r\n                 status: nextProps.status,\r\n                 vehicleGroup: nextProps.vehicleGroup,\r\n                 vehicleType: nextProps.vehicleType,\r\n                 currentVehicleGroup: nextProps.types[nextProps.vehicleGroup]\r\n                };\r\n      } else return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.name !== this.props.name) {\r\n        this.setState({\r\n          name: this.props.name,\r\n          id: this.props.id,\r\n          status: this.props.status,\r\n          vehicleGroup: this.props.vehicleGroup,\r\n          vehicleType: this.props.vehicleType,\r\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup]\r\n        })\r\n        \r\n      }\r\n      console.log(this.state.vehicleType);\r\n      console.log(this.state.currentVehicleGroup);\r\n    }\r\n\r\n    componentDidMount () {\r\n      console\r\n      this.setState({\r\n        vehicleGroup: this.props.vehicleGroup,\r\n        vehicleType: this.props.vehicleType,\r\n      })\r\n      console.log(this.state.vehicleGroup)\r\n    }    \r\n\r\n    render() {\r\n        const vGroup = ['Air', 'Sea', 'Land'];\r\n        const types = {\r\n          Air:  ['Helicopter', 'Plane'],\r\n          Sea:  ['Boat', 'Submarine'],\r\n          Land: ['Car', 'Truck']\r\n        };\r\n        return (\r\n          <div>\r\n            UpdateDetails\r\n            <form onSubmit={this.handleSubmit} key={this.props.id}>\r\n            <div><label htmlFor=\"id\">ID: </label><input type=\"text\" name=\"id\" value={this.state.id} readOnly/></div>\r\n            <div><label htmlFor=\"name\">Name: </label><input type=\"text\" name=\"name\" defaultValue={this.props.name || ''} ref={this.input}/></div>\r\n            <div>\r\n              <label htmlFor=\"status\">Status: </label>\r\n              <select name=\"status\" id=\"status\">\r\n              {this.statuses.map((status, index) => {\r\n                if (status === this.state.status) {\r\n                  return <option key={index} value={status} selected>{status}</option>\r\n                } else {\r\n                  return <option key={index} value={status}>{status}</option>\r\n                }\r\n              })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"vehicleGroup\">Vehicle group: </label>\r\n              <select name=\"vehicleGroup\" onChange={this.handleInputChange} defaultValue={this.props.vehicleGroup}>\r\n                {vGroup.map((group, index) => {\r\n                    \r\n                      return <option key={index} value={group}>{group}</option>\r\n                    \r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"vehicleType\">Vehicle type: </label>\r\n              <select name=\"vehicleType\" defaultValue={this.state.vehicleType}>\r\n                {this.types[this.props.vehicleGroup].map((type, index) => {\r\n                  \r\n                    return <option key={index} value={type}>{type}</option>\r\n                  \r\n                })}\r\n              </select>\r\n            </div>\r\n            \r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}