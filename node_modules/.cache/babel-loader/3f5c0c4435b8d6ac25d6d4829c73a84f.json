{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\updateDetails.js\";\nimport React, { Component } from 'react';\n\nvar UpdateDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateDetails, _Component);\n\n  function UpdateDetails(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateDetails).call(this, props));\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.models = {};\n    _this.state = {\n      id: '',\n      name: '',\n      vehicleGroup: '',\n      currentVehicleGroup: [],\n      vehicleType: '',\n      vehicleModel: '',\n      gear: [],\n      status: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateDetails, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      fetch('http://localhost:3000/transformers/' + this.state.id, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          name: this.name.value,\n          vehicleGroup: this.state.vehicleGroup,\n          vehicleType: this.state.vehicleType,\n          vehicleModel: this.state.vehicleModel,\n          gear: this.gear.value.split(\", \"),\n          status: this.state.status\n        })\n      });\n      console.log(\"name was submitted: \" + this.name.value + ' ' + this.state.gear.join(', ') + ' ' + this.gear.value);\n      console.log(this.gear.value.split(\", \"));\n      console.log(this.state.name);\n      this.props.getTransformer();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n      console.log(this.state.name);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.name !== this.props.name) {\n        this.setState({\n          name: this.props.name,\n          id: this.props.id,\n          status: this.props.status,\n          vehicleGroup: this.props.vehicleGroup,\n          vehicleType: this.props.vehicleType,\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\n          vehicleModel: this.props.vehicleModel,\n          gear: this.props.gear\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vGroup = ['Air', 'Sea', 'Land'];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"UpdateDetails\", React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        key: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: this.state.id,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        defaultValue: this.state.name || '',\n        ref: function ref(input) {\n          return _this2.name = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Status: \"), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.statuses.map(function (status, index) {\n        if (status === _this2.state.status) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, status);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, status);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Vehicle group: \"), React.createElement(\"select\", {\n        name: \"vehicleGroup\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, vGroup.map(function (group, index) {\n        if (group === _this2.state.vehicleGroup) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, group);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, group);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Vehicle type: \"), React.createElement(\"select\", {\n        name: \"vehicleType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.props.types[this.state.vehicleGroup].map(function (type, index) {\n        if (type === _this2.state.vehicleType) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, type);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, type);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleModel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Vehicle model: \"), React.createElement(\"select\", {\n        name: \"vehicleModel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.props.models[this.state.vehicleType].map(function (model, index) {\n        if (model === _this2.state.vehicleModel) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, model);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, model);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"gear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Gear: \", this.state.gear.join(', ')), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"gear\",\n        defaultValue: this.state.gear.join(', ') || '',\n        ref: function ref(input) {\n          return _this2.gear = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        name: nextProps.name,\n        id: nextProps.id,\n        status: nextProps.status,\n        vehicleGroup: nextProps.vehicleGroup,\n        vehicleType: nextProps.vehicleType,\n        currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\n        vehicleModel: nextProps.vehicleModel,\n        gear: nextProps.gear\n      };\n    }\n  }]);\n\n  return UpdateDetails;\n}(Component);\n\nexport { UpdateDetails as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\updateDetails.js"],"names":["React","Component","UpdateDetails","props","statuses","models","state","id","name","vehicleGroup","currentVehicleGroup","vehicleType","vehicleModel","gear","status","handleInputChange","bind","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","value","split","console","log","join","getTransformer","target","type","selected","setState","prevProps","prevState","types","vGroup","input","map","index","group","model","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class UpdateDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.statuses = ['OK', 'INJURED', 'MIA'];\r\n\r\n        this.models = {};\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            vehicleGroup: '',\r\n            currentVehicleGroup: [],\r\n            vehicleType: '',\r\n            vehicleModel: '',\r\n            gear: [],\r\n            status: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      fetch('http://localhost:3000/transformers/'+this.state.id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: this.state.id,\r\n          name: this.name.value,\r\n          vehicleGroup: this.state.vehicleGroup,\r\n          vehicleType: this.state.vehicleType,\r\n          vehicleModel: this.state.vehicleModel,\r\n          gear: this.gear.value.split(\", \"),\r\n          status: this.state.status\r\n        })\r\n      })\r\n      console.log(\"name was submitted: \" + this.name.value + ' ' + this.state.gear.join(', ') + ' ' + this.gear.value);\r\n      console.log(this.gear.value.split(\", \"));\r\n      console.log(this.state.name);\r\n      this.props.getTransformer();\r\n    }\r\n\r\n    handleInputChange (event) {\r\n      const target = event.target;\r\n      const value = target.type === 'select' ? target.selected : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n\r\n      console.log(this.state.name);\r\n\r\n  }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return { name: nextProps.name,\r\n                 id: nextProps.id,\r\n                 status: nextProps.status,\r\n                 vehicleGroup: nextProps.vehicleGroup,\r\n                 vehicleType: nextProps.vehicleType,\r\n                 currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\r\n                 vehicleModel: nextProps.vehicleModel,\r\n                 gear: nextProps.gear\r\n                };\r\n   \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.name !== this.props.name) {\r\n        this.setState({\r\n          name: this.props.name,\r\n          id: this.props.id,\r\n          status: this.props.status,\r\n          vehicleGroup: this.props.vehicleGroup,\r\n          vehicleType: this.props.vehicleType,\r\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\r\n          vehicleModel: this.props.vehicleModel,\r\n          gear: this.props.gear\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const vGroup = ['Air', 'Sea', 'Land'];\r\n        \r\n        return (\r\n          <div>\r\n            UpdateDetails\r\n            <form onSubmit={this.handleSubmit} key={this.props.id}>\r\n            <div><label htmlFor=\"id\">ID: </label><input type=\"text\" name=\"id\" value={this.state.id} readOnly/></div>\r\n            <div><label htmlFor=\"name\">Name: </label><input type=\"text\" name=\"name\" defaultValue={this.state.name || ''} ref={input => this.name = input} onChange={this.handleInputChange}/></div>\r\n            <div>\r\n              <label htmlFor=\"status\">Status: </label>\r\n              <select name=\"status\" id=\"status\">\r\n              {this.statuses.map((status, index) => {\r\n                if (status === this.state.status) {\r\n                  return <option key={index} value={status} selected>{status}</option>\r\n                } else {\r\n                  return <option key={index} value={status}>{status}</option>\r\n                }\r\n              })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"vehicleGroup\">Vehicle group: </label>\r\n              <select name=\"vehicleGroup\" onChange={this.handleInputChange}>\r\n                {vGroup.map((group, index) => {\r\n                  if (group === this.state.vehicleGroup) {\r\n                    return <option key={index} value={group} selected>{group}</option>\r\n                  } else {\r\n                    return <option key={index} value={group}>{group}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"vehicleType\">Vehicle type: </label>\r\n              <select name=\"vehicleType\">\r\n                {this.props.types[this.state.vehicleGroup].map((type, index) => {\r\n                  if (type === this.state.vehicleType) {\r\n                    return <option key={index} value={type} selected>{type}</option>\r\n                  } else { \r\n                    return <option key={index} value={type}>{type}</option>\r\n                  }\r\n                  \r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"vehicleModel\">Vehicle model: </label>\r\n              <select name=\"vehicleModel\">\r\n                {this.props.models[this.state.vehicleType].map((model, index) => {\r\n                  if (model === this.state.vehicleModel) {\r\n                    return <option key={index} value={model} selected>{model}</option>\r\n                  } else {\r\n                    return <option key={index} value={model}>{model}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"gear\">Gear: {this.state.gear.join(', ')}</label>\r\n              <input type=\"text\" name=\"gear\" defaultValue={this.state.gear.join(', ') || ''} ref={input => this.gear = input}/>\r\n            </div>\r\n            <button type=\"submit\">Update</button>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}