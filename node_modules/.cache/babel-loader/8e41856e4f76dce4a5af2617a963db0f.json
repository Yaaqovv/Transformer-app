{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\updateDetails.js\";\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nvar UpdateDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateDetails, _Component);\n\n  function UpdateDetails(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateDetails).call(this, props));\n\n    _this.handleNameChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      }, function () {\n        return _this.validateName();\n      });\n    };\n\n    _this.validateName = function () {\n      _this.setState({\n        nameError: _this.state.name.length >= 2 ? null : 'Name must be longer than 2 characters.'\n      });\n    };\n\n    _this.modalToggle = function () {\n      _this.setState({\n        showModal: !_this.state.showModal\n      });\n    };\n\n    _this.getModalParent = function () {\n      return document.querySelector('.update-details');\n    };\n\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.models = {};\n    _this.state = {\n      id: '',\n      name: '',\n      nameError: '',\n      vehicleGroup: _this.props.vehicleGroup,\n      currentVehicleGroup: [],\n      vehicleType: _this.props.vehicleType,\n      vehicleModel: _this.props.vehicleModel,\n      gear: [],\n      status: '',\n      showModal: false,\n      modalText: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateDetails, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      console.log({\n        \"name\": this.name.value,\n        \"vehicleGroup\": this.vGroup.value,\n        \"vehicleType\": this.vType.value,\n        \"vehicleModel\": this.model.value,\n        \"gear\": this.gear.value,\n        \"status\": this.status.value\n      });\n\n      if (this.name.value && this.state.vehicleGroup && this.state.vehicleType && this.state.vehicleModel && this.state.gear && this.state.status) {\n        fetch('http://localhost:3001/transformers/' + this.state.id, {\n          method: 'PUT',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.id,\n            name: this.name.value,\n            vehicleGroup: this.vGroup.value,\n            vehicleType: this.vType.value,\n            vehicleModel: this.model.value,\n            gear: this.gear.value.split(\", \"),\n            status: this.status.value\n          })\n        });\n        this.props.getTransformer();\n      } else {\n        this.setState({\n          modalText: 'Transformer has not been added. Make sure all fields are filled in.',\n          showModal: !this.state.showModal\n        });\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.name !== this.props.name) {\n        this.setState({\n          name: this.props.name,\n          id: this.props.id,\n          status: this.props.status,\n          vehicleGroup: this.props.vehicleGroup,\n          vehicleType: this.props.vehicleType,\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\n          vehicleModel: this.props.vehicleModel,\n          gear: this.props.gear\n        });\n      } else if (prevState.vehicleGroup !== this.vGroup.value) {\n        this.setState({\n          vehicleType: this.vType.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vGroup = ['Air', 'Sea', 'Land'];\n      var contentStyle = {\n        position: 'absolute',\n        left: '7vw',\n        right: '7vw',\n        width: '30vw',\n        margin: '0 auto',\n        border: 'none',\n        background: 'moccasin',\n        overflow: 'auto',\n        borderRadius: '4px',\n        bottom: 'unset',\n        outline: 'none',\n        padding: '35px'\n      };\n      return React.createElement(\"div\", {\n        className: \"update-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"hline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        key: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"id\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        className: \"right-tab\",\n        value: this.state.id,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"right-tab\",\n        defaultValue: this.state.name || '',\n        ref: function ref(input) {\n          return _this2.name = input;\n        },\n        onChange: this.handleNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.state.nameError), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleGroup\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Vehicle group: \"), React.createElement(\"select\", {\n        name: \"vehicleGroup\",\n        className: \"right-tab\",\n        ref: function ref(input) {\n          return _this2.vGroup = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, vGroup.map(function (group, index) {\n        if (group === _this2.state.vehicleGroup) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, group);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: group,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, group);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleType\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Vehicle type: \"), React.createElement(\"select\", {\n        name: \"vehicleType\",\n        className: \"right-tab\",\n        ref: function ref(input) {\n          return _this2.vType = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.props.types[this.state.vehicleGroup].map(function (type, index) {\n        if (type === _this2.state.vehicleType) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, type);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: type,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, type);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vehicleModel\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Vehicle model: \"), React.createElement(\"select\", {\n        name: \"vehicleModel\",\n        className: \"right-tab\",\n        ref: function ref(input) {\n          return _this2.model = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.props.models[this.state.vehicleType].map(function (model, index) {\n        if (model === _this2.state.vehicleModel) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, model);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: model,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, model);\n        }\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"gear\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Gear: \", this.state.gear.join(', ')), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"gear\",\n        className: \"right-tab\",\n        defaultValue: this.state.gear.join(', ') || '',\n        ref: function ref(input) {\n          return _this2.gear = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"status\",\n        className: \"left-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Status: \"), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        className: \"right-tab form-control\",\n        ref: function ref(input) {\n          return _this2.status = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.statuses.map(function (status, index) {\n        if (status === _this2.state.status) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, status);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, status);\n        }\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-outline-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Update\")), React.createElement(ReactModal, {\n        isOpen: this.state.showModal,\n        style: {\n          content: contentStyle\n        },\n        closeTimeoutMS: 200,\n        contentLabel: \"sadssaddsads\",\n        parentSelector: function parentSelector() {\n          return document.querySelector('.update-details');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.modalText), React.createElement(\"button\", {\n        className: \"btn btn-outline-primary\",\n        onClick: this.modalToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        name: nextProps.name,\n        id: nextProps.id,\n        status: nextProps.status,\n        currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\n        gear: nextProps.gear\n      };\n    }\n  }]);\n\n  return UpdateDetails;\n}(Component);\n\nexport { UpdateDetails as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\updateDetails.js"],"names":["React","Component","ReactModal","UpdateDetails","props","handleNameChange","event","setState","name","target","value","validateName","nameError","state","length","modalToggle","showModal","getModalParent","document","querySelector","statuses","models","id","vehicleGroup","currentVehicleGroup","vehicleType","vehicleModel","gear","status","modalText","handleInputChange","bind","handleSubmit","preventDefault","console","log","vGroup","vType","model","fetch","method","headers","body","JSON","stringify","split","getTransformer","type","selected","prevProps","prevState","types","contentStyle","position","left","right","width","margin","border","background","overflow","borderRadius","bottom","outline","padding","input","map","group","index","join","content","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\n\r\nexport default class UpdateDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.statuses = ['OK', 'INJURED', 'MIA'];\r\n\r\n        this.models = {};\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            nameError: '',\r\n            vehicleGroup: this.props.vehicleGroup,\r\n            currentVehicleGroup: [],\r\n            vehicleType: this.props.vehicleType,\r\n            vehicleModel: this.props.vehicleModel,\r\n            gear: [],\r\n            status: '',\r\n            showModal: false,\r\n            modalText: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      console.log({\r\n        \"name\": this.name.value,\r\n        \"vehicleGroup\": this.vGroup.value,\r\n        \"vehicleType\": this.vType.value,\r\n        \"vehicleModel\": this.model.value,\r\n        \"gear\": this.gear.value,\r\n        \"status\": this.status.value\r\n      });\r\n      if ( this.name.value && this.state.vehicleGroup && this.state.vehicleType && this.state.vehicleModel && this.state.gear && this.state.status) {\r\n        fetch('http://localhost:3001/transformers/'+this.state.id, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            id: this.state.id,\r\n            name: this.name.value,\r\n            vehicleGroup: this.vGroup.value,\r\n            vehicleType: this.vType.value,\r\n            vehicleModel: this.model.value,\r\n            gear: this.gear.value.split(\", \"),\r\n            status: this.status.value\r\n          })\r\n        })\r\n        this.props.getTransformer();\r\n      } else {\r\n        this.setState({ modalText: 'Transformer has not been added. Make sure all fields are filled in.',\r\n                        showModal: !this.state.showModal\r\n                      })\r\n  \r\n        } \r\n    }\r\n\r\n    handleInputChange (event) {\r\n      const target = event.target;\r\n      const value = target.type === 'select' ? target.selected : target.value;\r\n      const name = target.name;\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n\r\n  }\r\n\r\n  handleNameChange = event => {\r\n    this.setState({\r\n      name: event.target.value\r\n    }, () => this.validateName());\r\n  }\r\n\r\n\r\n  validateName = () => {\r\n    this.setState({\r\n      nameError: this.state.name.length >= 2 ? null : 'Name must be longer than 2 characters.'\r\n    });\r\n  }\r\n\r\n  modalToggle = () => {\r\n    this.setState({ showModal: !this.state.showModal })\r\n  }\r\n\r\n  getModalParent = () => {return document.querySelector('.update-details')}\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return { name: nextProps.name,\r\n                 id: nextProps.id,\r\n                 status: nextProps.status,\r\n                 currentVehicleGroup: nextProps.types[nextProps.vehicleGroup],\r\n                 gear: nextProps.gear\r\n                };\r\n   \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.name !== this.props.name) {\r\n        this.setState({\r\n          name: this.props.name,\r\n          id: this.props.id,\r\n          status: this.props.status,\r\n          vehicleGroup: this.props.vehicleGroup,\r\n          vehicleType: this.props.vehicleType,\r\n          currentVehicleGroup: this.props.types[this.props.vehicleGroup],\r\n          vehicleModel: this.props.vehicleModel,\r\n          gear: this.props.gear\r\n        })\r\n       } else if (prevState.vehicleGroup !== this.vGroup.value) {\r\n        this.setState({\r\n          vehicleType: this.vType.value\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const vGroup = ['Air', 'Sea', 'Land'];\r\n        const contentStyle = {\r\n          position: 'absolute',\r\n          left: '7vw',\r\n          right: '7vw',\r\n          width: '30vw',\r\n          margin: '0 auto',\r\n          border: 'none',\r\n          background: 'moccasin',\r\n          overflow: 'auto',\r\n          borderRadius: '4px',\r\n          bottom: 'unset',\r\n          outline: 'none',\r\n          padding: '35px',\r\n        }\r\n        \r\n        return (\r\n          <div className=\"update-details\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"hline\"></div>\r\n            <form onSubmit={this.handleSubmit} key={this.props.id}>\r\n            <div><label htmlFor=\"id\" className=\"left-tab\">ID: </label><input type=\"text\" name=\"id\" className=\"right-tab\" value={this.state.id} readOnly/></div>\r\n            <div><label htmlFor=\"name\" className=\"left-tab\">Name: </label><input type=\"text\" name=\"name\" className=\"right-tab\" defaultValue={this.state.name || ''} ref={input => this.name = input} onChange={this.handleNameChange}/></div>\r\n            <div>{this.state.nameError}</div>\r\n            <div>\r\n              <label htmlFor=\"vehicleGroup\" className=\"left-tab\">Vehicle group: </label>\r\n              <select name=\"vehicleGroup\" className=\"right-tab\" ref={input => this.vGroup = input} onChange={this.handleInputChange}>\r\n                {vGroup.map((group, index) => {\r\n                  if (group === this.state.vehicleGroup) {\r\n                    return <option key={index} value={group} selected>{group}</option>\r\n                  } else {\r\n                    return <option key={index} value={group}>{group}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vehicleType\" className=\"left-tab\">Vehicle type: </label>\r\n              <select name=\"vehicleType\" className=\"right-tab\" ref={input => this.vType = input} onChange={this.handleInputChange}>\r\n                {this.props.types[this.state.vehicleGroup].map((type, index) => {\r\n                  if (type === this.state.vehicleType) {\r\n                    return <option key={index} value={type} selected>{type}</option>\r\n                  } else { \r\n                    return <option key={index} value={type}>{type}</option>\r\n                  }\r\n                  \r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"vehicleModel\" className=\"left-tab\">Vehicle model: </label>\r\n              <select name=\"vehicleModel\" className=\"right-tab\" ref={input => this.model = input}>\r\n                {this.props.models[this.state.vehicleType].map((model, index) => {\r\n                  if (model === this.state.vehicleModel) {\r\n                    return <option key={index} value={model} selected>{model}</option>\r\n                  } else {\r\n                    return <option key={index} value={model}>{model}</option>\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"gear\" className=\"left-tab\">Gear: {this.state.gear.join(', ')}</label>\r\n              <input type=\"text\" name=\"gear\" className=\"right-tab\" defaultValue={this.state.gear.join(', ') || ''} ref={input => this.gear = input}/>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"status\" className=\"left-tab\">Status: </label>\r\n              <select name=\"status\" id=\"status\" className=\"right-tab form-control\" ref={input => this.status = input}>\r\n              {this.statuses.map((status, index) => {\r\n                if (status === this.state.status) {\r\n                  return <option key={index} value={status} selected>{status}</option>\r\n                } else {\r\n                  return <option key={index} value={status}>{status}</option>\r\n                }\r\n              })}\r\n              </select>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Update</button>\r\n            </form>\r\n            <ReactModal\r\n              isOpen={this.state.showModal}\r\n              style={{content: contentStyle}}\r\n              closeTimeoutMS={200}\r\n              contentLabel=\"sadssaddsads\"\r\n              parentSelector={() => document.querySelector('.update-details')}\r\n            >\r\n              <div>{this.state.modalText}</div>\r\n              <button className=\"btn btn-outline-primary\" onClick={this.modalToggle}>\r\n                Ok\r\n              </button>\r\n            </ReactModal>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}