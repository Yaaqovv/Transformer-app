{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\transformer.js\";\nimport React, { Component } from 'react';\n\nvar Transformer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Transformer, _Component);\n\n  function Transformer(props) {\n    var _this;\n\n    _classCallCheck(this, Transformer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transformer).call(this, props));\n    _this.statuses = ['OK', 'INJURED', 'MIA'];\n    _this.deleteTransformer = _this.deleteTransformer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateStatus = _this.updateStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Transformer, [{\n    key: \"deleteTransformer\",\n    value: function deleteTransformer() {\n      this.props.deleteTransformer(this.props.id);\n    }\n  }, {\n    key: \"updateStatus\",\n    value: function updateStatus(id, event) {\n      var target = event.target;\n      var value = target.type === 'select' ? target.selected : target.value;\n      fetch('http://localhost:3000/transformers/' + id, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.props.name,\n          status: value,\n          vehicleGroup: this.props.vehicleGroup,\n          vehicleType: this.props.vehicleType,\n          vehicleModel: this.props.vehicleModel,\n          gear: this.props.gear\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"transformer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"transformer-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Current status: \", this.props.status), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        className: \"form-control\",\n        onChange: function onChange(event) {\n          return _this2.updateStatus(_this2.props.id, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.statuses.map(function (status, index) {\n        if (_this2.props.status === status) {\n          return React.createElement(\"option\", {\n            selected: true,\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, status);\n        } else {\n          return React.createElement(\"option\", {\n            key: index,\n            value: status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, status);\n        }\n      }))), React.createElement(\"button\", {\n        onClick: this.deleteTransformer,\n        className: \"delete-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Transformer;\n}(Component);\n\nexport { Transformer as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\transformer.js"],"names":["React","Component","Transformer","props","statuses","deleteTransformer","bind","updateStatus","id","event","target","value","type","selected","fetch","method","headers","body","JSON","stringify","name","status","vehicleGroup","vehicleType","vehicleModel","gear","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Transformer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.statuses = ['OK', 'INJURED', 'MIA'];\r\n\r\n    this.deleteTransformer = this.deleteTransformer.bind(this);\r\n    this.updateStatus = this.updateStatus.bind(this);\r\n  }\r\n\r\n  deleteTransformer () {\r\n    this.props.deleteTransformer(this.props.id);\r\n  }\r\n\r\n  updateStatus (id, event) {\r\n    const target = event.target;\r\n    const value = target.type === 'select' ? target.selected : target.value;\r\n    \r\n    fetch('http://localhost:3000/transformers/'+id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name:this.props.name,\r\n          status: value,\r\n          vehicleGroup: this.props.vehicleGroup,\r\n          vehicleType: this.props.vehicleType,\r\n          vehicleModel: this.props.vehicleModel,\r\n          gear: this.props.gear,\r\n        })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"transformer\">\r\n          \r\n          <div className=\"transformer-status\">\r\n            <h3>{ this.props.name }</h3>\r\n            <p>Current status: {this.props.status}</p>\r\n            <select name=\"status\" id=\"status\" className=\"form-control\" onChange={event => this.updateStatus(this.props.id, event)}>\r\n              {this.statuses.map((status, index) => { \r\n                  if (this.props.status === status ) {\r\n                        return <option selected key={ index } value={ status }>{ status }</option>;\r\n                  } else {\r\n                    return <option key={ index } value={ status }>{ status }</option>;\r\n                  }\r\n                })}\r\n            </select>\r\n          </div>\r\n          <button onClick={this.deleteTransformer} className=\"delete-icon\"><span></span><i></i></button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}