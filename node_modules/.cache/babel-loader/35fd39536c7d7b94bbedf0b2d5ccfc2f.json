{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakov\\\\Transformer-app\\\\src\\\\components\\\\transformers.js\";\nimport React, { Component } from 'react';\nimport Add from './add';\nimport Delete from './delete';\nimport Transformer from './transformer';\n\nvar Transformers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Transformers, _Component);\n\n  function Transformers(props) {\n    var _this;\n\n    _classCallCheck(this, Transformers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transformers).call(this, props));\n    _this.state = {\n      items: [],\n      isLoaded: false,\n      addFormVisibility: false,\n      search: ''\n    };\n    _this.toggleAddForm = _this.toggleAddForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTransformers = _this.getTransformers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteTransformer = _this.deleteTransformer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.filterItems = _this.filterItems.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Transformers, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getTransformers();\n    }\n  }, {\n    key: \"getTransformers\",\n    value: function getTransformers() {\n      var _this2 = this;\n\n      var myHeaders = new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      });\n      fetch('http://localhost:3000/transformers', {\n        headers: myHeaders\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          items: json,\n          isLoaded: true\n        });\n\n        console.log(_this2.state.items);\n      });\n    }\n  }, {\n    key: \"deleteTransformer\",\n    value: function deleteTransformer(id) {\n      fetch('http://localhost:3000/transformers/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.text();\n      });\n      var transformers = this.state.items;\n      var filteredTransformers = transformers.filter(function (transformer) {\n        return transformer.id !== id;\n      });\n      this.setState({\n        items: filteredTransformers\n      });\n    }\n  }, {\n    key: \"toggleAddForm\",\n    value: function toggleAddForm() {\n      if (!this.state.addFormVisibility) {\n        this.setState({\n          addFormVisibility: true\n        });\n      } else {\n        this.setState({\n          addFormVisibility: false\n        });\n      }\n    }\n  }, {\n    key: \"filterItems\",\n    value: function filterItems(event) {\n      this.setState({\n        search: event.target.value\n      });\n      console.log(this.state.search);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Transformer app\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        value: this.state.search,\n        onChange: this.filterItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), this.state.items.map(function (item) {\n        React.createElement(Transformer, Object.assign({\n          key: item.id\n        }, item, {\n          deleteTransformer: _this3.deleteTransformer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      }), \") }\", React.createElement(\"button\", {\n        onClick: this.toggleAddForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" + \"), React.createElement(Add, {\n        show: this.state.addFormVisibility,\n        getTransformers: this.getTransformers,\n        toggleAddForm: this.toggleAddForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Transformers;\n}(Component);\n\nexport { Transformers as default };","map":{"version":3,"sources":["C:\\Users\\Jakov\\Transformer-app\\src\\components\\transformers.js"],"names":["React","Component","Add","Delete","Transformer","Transformers","props","state","items","isLoaded","addFormVisibility","search","toggleAddForm","bind","getTransformers","deleteTransformer","filterItems","myHeaders","Headers","fetch","headers","then","response","json","setState","console","log","id","method","res","text","transformers","filteredTransformers","filter","transformer","event","target","value","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Add from './add';\r\nimport Delete from './delete';\r\nimport Transformer from './transformer';\r\n\r\n\r\nexport default class Transformers extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      addFormVisibility: false,\r\n      search: ''\r\n    }\r\n    this.toggleAddForm = this.toggleAddForm.bind(this);\r\n    this.getTransformers = this.getTransformers.bind(this);\r\n    this.deleteTransformer = this.deleteTransformer.bind(this);\r\n    this.filterItems = this.filterItems.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    this.getTransformers();\r\n  }\r\n\r\n  getTransformers () {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\"\r\n    });\r\n      fetch('http://localhost:3000/transformers', {\r\n        headers: myHeaders,\r\n      })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          items: json,\r\n          isLoaded: true\r\n        })\r\n        console.log(this.state.items);\r\n      });\r\n  }\r\n\r\n  deleteTransformer (id) {\r\n      fetch('http://localhost:3000/transformers/'+id, {\r\n        method: 'DELETE',\r\n        headers: {'Content-Type': 'application/json'} \r\n    }).then(res => res.text())\r\n\r\n    const transformers = this.state.items;\r\n\r\n    const filteredTransformers = transformers.filter(transformer => {\r\n      return transformer.id !== id;\r\n    });\r\n\r\n    this.setState({\r\n      items: filteredTransformers\r\n    });\r\n  }\r\n\r\n  toggleAddForm () {\r\n    if (!this.state.addFormVisibility) {\r\n      this.setState({\r\n        addFormVisibility: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        addFormVisibility: false\r\n      });\r\n    }\r\n  }\r\n\r\n  filterItems (event) {\r\n    this.setState({\r\n      search: event.target.value\r\n    })\r\n    console.log(this.state.search);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>Transformer app</h1>\r\n        <hr />\r\n        <input type=\"text\" placeholder=\"search\" value={this.state.search} onChange={this.filterItems} />\r\n        <hr />\r\n        {\r\n          this.state.items.map(item => {\r\n              <Transformer\r\n                key={item.id}\r\n                {...item}\r\n                deleteTransformer={this.deleteTransformer}\r\n              />\r\n            })\r\n          })\r\n        }\r\n        <button onClick={this.toggleAddForm}> + </button>\r\n        <Add\r\n          show={this.state.addFormVisibility}\r\n          getTransformers={this.getTransformers}\r\n          toggleAddForm={this.toggleAddForm}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}